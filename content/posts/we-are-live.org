#+DATE: 2017-06-18T13:49:02+02:00
#+LASTMOD: 2018-10-20T13:38:02+02:00
#+TITLE: We're Live!
#+DRAFT: false
#+TYPE: post
#+DESCRIPTION: First post, and a break down of the tools used to construct the site

This blog has been a long time coming. I have wanted to post on a number of things that completing the blog became a priority. Before I jump into topics of interest, I want to list some of the technologies driving the blog.

# more

** Hugo
   The more I use [[https://gohugo.io/][Hugo]], the more I love it. My first attempts at a blog used database-driven content management systems (CMS), which made sense at the time. Database driven CMS's are still relevant for large, distributed teams that need a central point to manage their content. The rise of [[https://www.staticgen.com/][static site generators]] allows us to sidestep the reliance on a back-end for simple sites. There is a static site generator suited for everyone but when Hugo started supporting [[http://orgmode.org/][org-mode]] for content was when I became hooked.

   The ability to customise Hugo to your tastes is a big plus. It handles the content and then quickly gets out of the way. It is fast, stable and provides all the functionality I need. I only have praise for the team, Hugo is a joy to work with.

*** GitHub & GitHub Pages
    I rely heavily on version control. Most of my work goes into private repositories which left my [[https://github.com/][GitHub]] account neglected. I use [[https://pages.github.com/][GitHub Pages]] for this blog. If there is no major reliance on a back-end, you can have your repositories & blog in the same place. Yay Git!

*** Cloudflare
    You have a static website but you now need SSL or some simple server functionality? Enter [[https://www.cloudflare.com/][Cloudflare]], helping secure your website as well as other benefits. It solved the issues I had, and it solved it for free.

*** +Gulp+ NPM
    +There are options with Task Runners too but I have grown very found of [[http://gulpjs.com/][Gulp]]. In time, I may simplify my builds using more generic tools (i.e. [[https://www.npmjs.com/][npm]] natively or bash scripts) but Gulp does what I need it too and it does it well.+

    Gulp certainly still has its place but after working with [[https://webpack.js.org/][Webpack]], I have grown more accustomed to [[https://docs.npmjs.com/misc/scripts][NPM scripts]]. Moving from Gulp to NPM scripts allowed me to remove a 'minor' dependency & streamline my build process.

*** +Susy+ CSS Grid & Flexbox
    +For the life of me, I cannot understand why [[http://susy.oddbird.net/][Susy]] has not been more widely adopted. I have been using Susy as a [[http://sass-lang.com/][Sass]] grid system for a few years and the flexibility it gives is unmatched. The rise of flex-box and CSS-grid will eventually replace Susy. Until then, it allows greater  freedom in positioning & layout without the expense of my sanity or weekends.+

    For its time, Susy was amazing! It added so many options that were either not available or took too long to develop & maintain. But after CSS grid & flexbox arrived (and Susy started to [[https://twitter.com/SassSusy/status/954423375127957504][shut down]]), there really was no excuse to hold onto the past. A combination of CSS grid & flexbox can allow for almost limitless responsive layout options. I decided to try it out and recreate the existing Susy layout using CSS grid & flexbox. And where better than here!

*** JavaScript
    Or lack thereof. One of the goals for the blog was to see if I could solve most problems without having to use JavaScript (JS). [[https://stallman.org/][Richard Stallman]] and his approaches to software development have impacted my views. Completely 'free' software is a worthwhile ideal if somewhat inconvenient. 

    The blog runs Analytics but should still function with JS disabled. Not a day goes by when I do not write some JS, but this blog is as much about experimenting & prototyping as it is about blogging. I'll save JS for the good stuff.

*** Emacs
      My love of [[https://www.gnu.org/software/emacs/][Emacs]] grows. After a number of years using it as a time-tracking & scoping tool, I recently took the plunge and started developing in it. My quality of life has increased significantly.

 *Question:* Is it the only IDE solution & does it do everything better than all the others?

 *Answer:* No, but it can do so much once you get over the learning curve & play to its strengths.

 Tip 22 from the [[https://pragprog.com/book/tpp/the-pragmatic-programmer][Pragmatic Programmer]] was "Use a single editor well". This struck me as odd because I was using a number of IDE's simultaneously. Each one had its specific niche but fell short in other respects. I now see the advantage of consolidating my life in a single editor. I use other IDE's when needed ([[https://www.visualstudio.com/][Visual Studio]], [[https://developer.apple.com/xcode/][Xcode]], [[https://madewith.unity.com/][Unity]] & [[https://www.unrealengine.com/][Unreal]]) but Emacs feels like home every time I fire it up.
