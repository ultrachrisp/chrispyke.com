#+DATE: 2018-11-04T16:42:43+02:00
#+TITLE: The Almighty Prototype
#+DRAFT: true

<img style="width:180px; height:180px; float:right;" src="../../img/react.svg" alt="React"/>
Hindsight is completely unforgiving. Looking back & observing oversights is a luxury that most projects cannot afford. This is why you need to make space for yourself to fail, and fail enough to learn the lesson. Because, in all honesty, failure is the best teacher that we have, provided we choose a suitable time to fail. And that time is in the early stages of a project when it is still 'relatively' easy to accommodate changes.

** But I know what the user wants
   Stakeholders or clients often do not see the true value of prototyping. Why budget time refining at the very beginning of the project? The 'agile approach' expects us to deploy a 'minimum viable product' (MVP) as soon as possible & then iterate on it. In the panic to get to market, it is very easy to overlook the word 'viable' in MVP.

   Prototyping & user testing at an early stage will provide a solid, iterable foundation. I have been involved with projects where the stakeholders were convinced that they knew their users. When the project launched and did not get the traction hoped for, the focus shifted to the designers & developers.

We took a closer look at the analytics and conducted some user testing. The data showed that the stakeholders did not understand their users as well as they claimed. 
   
** Hi vs Lo fidelity
   Making a quick & dirty user flow using paper or a richer representation including screen transitions & working components depends on the stage & type of the project. Some projects are so different that you have to create the interaction paradigm. Other projects can leverage existing paradigms & best practises. Both extremes can still benefit from prototyping, but the role the prototype plays is very different.

   For projects that have new interaction paradigms, a fast & cheap prototyping technique is very helpful. You can mock up interactions and program states on pieces of paper to use for user testing. These prototypes give great insights into how to use & interact with the product & can be rapidly iterated upon. Additionally, you can overhaul the project completely at this early stage.

   A higher fidelity prototype can work well later in a project. Sometimes you need evidence that a proposal or approach is flawed. Other times, a high fidelity prototype can catch some oversights or issues.

   The biggest take away is that it can be very hard to motivate for a prototype during the project but it is almost always worth it.

** Talk is cheap
  Many stakeholders are, "obsessively compulsively indecisive". Or in other words, "they do not know what they want, but they know that they want it now".

  We faced this issue on a project where the stakeholders insisted we had everything we needed to start development. We disagreed, but decided we needed to be proactive. We rapidly prototyped some of the designs using [[https://framer.com/][Framer]] to highlight the pitfalls. 

  We sent the stakeholder a preview link of the prototype when an amazing thing happened. The stakeholders replied with a detailed critique of the prototype. This critique included questions on the design, user flows as well as various user experience (UX) components. We then revealed that we had merely mocked up the very same designs they had given us. The stakeholders were shocked. They immediately calmed down and allowed us some room to refine the product.

** Tools

** Multi-purpose
   The ability to rapidly & effectively prototype can provide different results or insights, depending on how you use the prototype. The specific prototype's fidelity comes into play here, but some general uses include:

   - Provide a concrete example to an abstract concept.
